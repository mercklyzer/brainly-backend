#!/usr/bin/env node



var app = require('../app');
var debug = require('debug')('brainlydocker:server');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

 const http = require('http').Server(app)
 const io = require('socket.io')(http);
 
 io.on('connection', socket => {
   console.log('user connected');

   socket.on('join', (userId) => {
     socket.join(userId)
   })
 
   socket.on('send message', messageObj => {
     io.to(messageObj.receiverId).to(messageObj.senderId).emit('receive message', messageObj)
   })
 
   socket.on('message typing', (messageObj, boolVal) => {
     console.log("message typing: " + boolVal + " " + messageObj.receiverId);
    io.to(messageObj.receiverId).emit('message typing', boolVal)
   })

   socket.on('update thread', threadObj => {
     io.to(threadObj.user1Id).to(threadObj.user2Id).emit('receive thread', threadObj)
   })
 
 })


http.listen(3000, () => console.log("listening to port 3000"))

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

